Задание 1. Подготовьте инфраструктуру

Подготовьте инфраструктуру для выполнения домашних заданий:

1) Создайте репозиторий на сервисе GitHub, в который будут отправляться домашние задания. 
Для тех, кто раньше не работал с этим сервисом, внизу есть видео-инструкция. 
(любители C# при желании могут использовать сервис visualstudio.com, в этом случае не забудьте 
предоставить доступ тренерам к репозиторию -- barancev@gmail.com и cherednichenko@outlook.com).

2) Установите всё необходимое для работы программное обеспечение.

3) Создайте проект внутри локальной копии репозитория, подключите к проекту Selenium и сделайте 
небольшой работающий тест, который просто запускает браузер, открывает 
какую-нибудь страницу и закрывает браузер.

4) Уложите всё в репозиторий и синхронизируйте с удалённым сервером.

----------------------------------------------------

Задание 2. Установите учебное приложение

Локальный веб-сервер

Для выполнения домашних заданий нам потребуется учебное приложение, с которым вы можете делать 
любые эксперименты и никому не мешать. Чтобы выполнить это требование, нам потребуется 
локальный веб-сервер, на котором будет развёрнуто учебное приложение.

Если у вас уже есть какой-нибудь веб-сервер, который представляет собой 
комбинацию Apache+MySQL+PHP -- можете использовать его.

Если у вас нет локального веб-сервера -- установите XAMPP в соответствии 
с инструкцией: http://selenium2.ru/articles/136-installing-xampp.html

Если Вы решили взять другой сервер, посмотрите информацию ниже, для некоторых серверов требуются 
дополнительные действия после установки учебного приложения.

Внимание: используйте версии веб-серверов, которые включают PHP 5.6, потому что пока далеко не все 
веб-приложения совместимы с PHP 7
Учебное приложение

После того, как сервер готов, нужно установить учебное приложение. Мы будем использовать 
для этой цели веб-магазин litecart

Внимание: Для выполнения домашних заданий нужна версия litecart 1.3, её можно скачать как по указанной
выше ссылке, так и c официального сайта, но не берите версию 2.0 или более новую

Вы можете попробовать установить его самостоятельно, а если 
не получится -- смотрите видео-инструкцию ниже.

Если всё получилось -- можете самостоятельно отметить задание 
как выполненное -- перейти на главную страницу курса и поставить галочку напротив этого задания.

Если возникли затруднения -- задавайте вопросы в скайп-чат.

----------------------------------------------------

Задание 3. Сделайте сценарий логина

Сделайте сценарий для логина в панель администрирования 
учебного приложения http://localhost/litecart/admin/

Проверки можно пока никакие не делать, только действия -- заполнение полей, нажатия на кнопки и ссылки.

Можно оформить сценарий либо как тест, либо как отдельный исполняемый файл.

Не забывайте о том, что браузер должен останавливаться, даже если возникли какие-либо ошибки 
во время выполнения сценария.

----------------------------------------------------

Задание 4. Научитесь запускать разные браузеры

Попробуйте запустить разработанный ранее сценарий логина во всех основных браузерах, доступных 
для вашей операционной системы.

Windows -- запустите в Firefox (с использованием geckodriver), Chrome, Internet Explorer (или Edge).

Linux -- запустите в Firefox (с использованием geckodriver) и Chrome.

MacOS -- запустите в Firefox (с использованием geckodriver), Chrome, а при наличии Safari 10 также и в нём.

Если всё получилось -- можете самостоятельно отметить задание как выполненное -- перейти на 
главную страницу курса и поставить галочку напротив этого задания.

Если возникли затруднения -- задавайте вопросы в скайп-чат.

----------------------------------------------------

Задание 5. Научитесь запускать Firefox "по старой схеме"

Попробуйте запустить разработанный ранее сценарий логина в браузере Firefox ESR, используя 
старую схему запуска, без использования geckodriver. Если Selenium не может сам найти место, 
куда установлен Firefox ESR -- укажите в параметрах запуска путь к браузеру.

Если всё получилось -- можете самостоятельно отметить задание как выполненное -- перейти на 
главную страницу курса и поставить галочку напротив этого задания.

Замечание для тех, кто использует JavaScript: начиная с версии 3.5.0 старая схема 
запуска Firefox в реализации на JS не поддерживается, так что можете пропустить это задание.

Если возникли затруднения -- задавайте вопросы в скайп-чат.

----------------------------------------------------

Задание 6. Научитесь запускать Firefox Nightly

Попробуйте запустить разработанный ранее сценарий логина 
в браузере Firefox Nightly (https://nightly.mozilla.org/). Если Selenium не может сам найти место, 
куда установлен Firefox Nightly -- укажите в параметрах запуска путь к браузеру.

Если всё получилось -- можете самостоятельно отметить задание как выполненное -- перейти на 
главную страницу курса и поставить галочку напротив этого задания.

Если возникли затруднения -- задавайте вопросы в скайп-чат.

----------------------------------------------------

Задание 7. Сделайте сценарий, проходящий по всем разделам админки

Сделайте сценарий, который выполняет следующие действия в учебном приложении litecart

1) входит в панель администратора http://localhost/litecart/admin
2) прокликивает последовательно все пункты меню слева, включая вложенные пункты
3) для каждой страницы проверяет наличие заголовка (то есть элемента с тегом h1)

Можно оформить сценарий либо как тест, либо как отдельный исполняемый файл.

Если возникают проблемы с выбором локаторов для поиска элементов -- обращайтесь в чат за помощью.

----------------------------------------------------

Задание 8. Сделайте сценарий, проверяющий наличие стикеров у товаров

Сделайте сценарий, проверяющий наличие стикеров у всех товаров в учебном приложении litecart
на главной странице. Стикеры -- это полоски в левом верхнем углу изображения товара, 
на которых написано New или Sale или что-нибудь другое. Сценарий должен проверять, что у 
каждого товара имеется ровно один стикер.

Можно оформить сценарий либо как тест, либо как отдельный исполняемый файл.

Если возникают проблемы с выбором локаторов для поиска элементов -- обращайтесь в чат за помощью.

----------------------------------------------------

Задание 9. Проверить сортировку стран и геозон в админке

Сделайте сценарии, которые проверяют сортировку стран и геозон (штатов) 
в учебном приложении litecart

1) на странице http://localhost/litecart/admin/?app=countries&doc=countries
а) проверить, что страны расположены в алфавитном порядке
б) для тех стран, у которых количество зон отлично от нуля -- открыть страницу этой страны 
и там проверить, что зоны расположены в алфавитном порядке

2) на странице http://localhost/litecart/admin/?app=geo_zones&doc=geo_zones
зайти в каждую из стран и проверить, что зоны расположены в алфавитном порядке

Можно оформить сценарии либо как тесты, либо как отдельные исполняемые файлы.

Если возникают проблемы с выбором локаторов для поиска элементов -- обращайтесь в чат за помощью.

----------------------------------------------------

Задание 10. Проверить, что открывается правильная страница товара

Сделайте сценарий, который проверяет, что при клике на товар открывается правильная 
страница товара в учебном приложении litecart

Более точно, нужно открыть главную страницу, выбрать первый товар 
в блоке Campaigns и проверить следующее:

а) на главной странице и на странице товара совпадает текст названия товара
б) на главной странице и на странице товара совпадают цены (обычная и акционная)
в) обычная цена зачёркнутая и серая (можно считать, что "серый" цвет это такой, у 
которого в RGBa представлении одинаковые значения для каналов R, G и B)
г) акционная жирная и красная (можно считать, что "красный" цвет это такой, у 
которого в RGBa представлении каналы G и B имеют нулевые значения)
(цвета надо проверить на каждой странице независимо, при этом цвета на разных 
страницах могут не совпадать)
д) акционная цена крупнее, чем обычная (это тоже надо проверить на каждой странице независимо)

Необходимо убедиться, что тесты работают в разных браузерах, желательно проверить во всех трёх 
ключевых браузерах (Chrome, Firefox, IE).

Можно оформить сценарии либо как тесты, либо как отдельные исполняемые файлы.

Если возникают проблемы с выбором локаторов для поиска элементов -- обращайтесь в чат за помощью.

----------------------------------------------------

Задание 11. Сделайте сценарий регистрации клиента

Сделайте сценарий для регистрации нового клиента в учебном приложении 
litecart (не в админке, а в клиентской части магазина).

Сценарий должен состоять из следующих частей:

1) регистрация новой учётной записи с достаточно уникальным адресом электронной почты (чтобы 
не конфликтовало с ранее созданными пользователями, в том числе при предыдущих запусках 
того же самого сценария),
2) выход (logout), потому что после успешной регистрации автоматически происходит вход,
3) повторный вход в только что созданную учётную запись,
4) и ещё раз выход.

В качестве страны выбирайте United States, штат произвольный. При этом формат индекса -- пять цифр.

Можно оформить сценарий либо как тест, либо как отдельный исполняемый файл.

Проверки можно никакие не делать, только действия -- заполнение полей, нажатия на кнопки и ссылки. 
Если сценарий дошёл до конца, то есть созданный пользователь смог выполнить 
вход и выход -- значит создание прошло успешно.

В форме регистрации есть капча, её нужно отключить в админке учебного приложения 
на вкладке Settings -> Security.

----------------------------------------------------

Задание 12. Сделайте сценарий добавления товара

Сделайте сценарий для добавления нового товара (продукта) в учебном приложении litecart (в админке).

Для добавления товара нужно открыть меню Catalog, в правом верхнем углу нажать кнопку "Add New Product", 
заполнить поля с информацией о товаре и сохранить.

Достаточно заполнить только информацию на вкладках General, Information и Prices. Скидки (Campains) 
на вкладке Prices можно не добавлять.

Переключение между вкладками происходит не мгновенно, поэтому после переключения можно сделать 
небольшую паузу (о том, как делать более правильные ожидания, будет рассказано в следующих занятиях).

Картинку с изображением товара нужно уложить в репозиторий вместе с кодом. При этом указывать в коде 
полный абсолютный путь к файлу плохо, на другой машине работать не будет. Надо средствами 
языка программирования преобразовать относительный путь в абсолютный.

После сохранения товара нужно убедиться, что он появился в каталоге (в админке). Клиентскую часть магазина 
можно не проверять.

Можно оформить сценарий либо как тест, либо как отдельный исполняемый файл.

----------------------------------------------------

Задание 13. Сделайте сценарий работы с корзиной

Сделайте сценарий для добавления товаров в корзину и удаления товаров из корзины.

1) открыть главную страницу
2) открыть первый товар из списка
2) добавить его в корзину (при этом может случайно добавиться товар, который там уже есть, 
ничего страшного)
3) подождать, пока счётчик товаров в корзине обновится
4) вернуться на главную страницу, повторить предыдущие шаги ещё два раза, чтобы в общей сложности 
в корзине было 3 единицы товара
5) открыть корзину (в правом верхнем углу кликнуть по ссылке Checkout)
6) удалить все товары из корзины один за другим, после каждого удаления подождать, 
пока внизу обновится таблица

Можно оформить сценарий либо как тест, либо как отдельный исполняемый файл.

----------------------------------------------------

Задание 14. Проверьте, что ссылки открываются в новом окне

Сделайте сценарий, который проверяет, что ссылки на странице редактирования страны открываются в новом окне.

Сценарий должен состоять из следующих частей:

1) зайти в админку
2) открыть пункт меню Countries (или страницу http://localhost/litecart/admin/?app=countries&doc=countries)
3) открыть на редактирование какую-нибудь страну или начать создание новой
4) возле некоторых полей есть ссылки с иконкой в виде квадратика со стрелкой -- они ведут 
на внешние страницы и открываются в новом окне, именно это и нужно проверить.

Конечно, можно просто убедиться в том, что у ссылки есть атрибут target="_blank". Но в этом 
упражнении требуется именно кликнуть по ссылке, чтобы она открылась в новом окне, потом переключиться 
в новое окно, закрыть его, вернуться обратно, и повторить эти действия для всех таких ссылок.

Не забудьте, что новое окно открывается не мгновенно, поэтому требуется ожидание открытия окна.

Можно оформить сценарий либо как тест, либо как отдельный исполняемый файл.

----------------------------------------------------

Задание 15. Постройте небольшой грид

Установите виртуальную машину, внутри которой работает Windows, и создайте грид, который состоит из 
диспетчера, работающего на вашей основной машине, и двух узлов -- один тоже на основной машине, 
а другой внутри виртуальной машины.

Настройте узлы так, чтобы в виртуальной машине был доступен браузер Internet Explorer, а на 
основной машине, наоборот, он был недоступен.

Попробуйте запустить какие-нибудь тесты удалённо на этом гриде, указывая разные браузеры, и убедитесь, 
что Internet Explorer действительно запускается внутри виртуальной машины, а другие браузеры, 
наоборот, на вашей основной машине.

Можно использовать любую систему виртуализации, но если у вас 
нет предпочтений -- берите https://www.virtualbox.org/

Готовые образы Windows для разных систем виртуализации можно 
найти здесь: https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/

Если всё получилось -- можете самостоятельно отметить задание как выполненное -- перейти на 
главную страницу курса и поставить галочку напротив этого задания.

Если возникли затруднения -- задавайте вопросы в скайп-чат.

----------------------------------------------------

Задание 16. Научитесь использовать облачный грид

Запустить несколько тестов в каком-нибудь облачном сервисе на выбор:

https://www.browserstack.com/
https://www.gridlastic.com/
https://saucelabs.com/
https://testingbot.com/

Если всё получилось -- можете самостоятельно отметить задание как 
выполненное -- перейти на главную страницу курса и поставить галочку напротив этого задания.

Если возникли затруднения -- задавайте вопросы в скайп-чат.

----------------------------------------------------

Задание 17. Проверьте отсутствие сообщений в логе браузера

Сделайте сценарий, который проверяет, не появляются ли в логе браузера сообщения при открытии страниц 
в учебном приложении, а именно -- страниц товаров в каталоге в административной панели.

Сценарий должен состоять из следующих частей:

1) зайти в админку
2) открыть каталог, категорию, которая содержит 
товары (страница http://localhost/litecart/admin/?app=catalog&doc=catalog&category_id=1)
3) последовательно открывать страницы товаров и проверять, не появляются ли 
в логе браузера сообщения (любого уровня)

Можно оформить сценарий либо как тест, либо как отдельный исполняемый файл.

----------------------------------------------------

Задание 18. Перенаправьте трафик в прокси-сервер

Установите какой-нибудь прокси-сервер, который умеет протоколировать запросы и ответы.

На выбор прокси-сервера для разных платформ:
http://www.telerik.com/fiddler (Windows)
https://www.charlesproxy.com/ (Windows, Linux, MacOS, платный, но есть пробная версия)
https://mitmproxy.org/ (Linux, MacOS)
https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project (Windows, LInux, MacOS)

Инициализируйте драйвер так, чтобы запросы из браузера отправлялись 
через этот прокси-сервер, убедитесь, что они там видны.

Если всё получилось -- можете самостоятельно отметить задание как выполненное -- перейти на 
главную страницу курса и поставить галочку напротив этого задания.

Если возникли затруднения -- задавайте вопросы в скайп-чат.

----------------------------------------------------

Задание 19. Реализовать многослойную архитектуру

Переделайте созданный в задании 13 сценарий для добавления товаров в корзину и удаления 
товаров из корзины, чтобы он использовал многослойную архитектуру.

А именно, выделите вспомогательные классы для работы с главной страницей (откуда выбирается товар), 
для работы со страницей товара (откуда происходит добавление товара в корзину), со страницей корзины 
(откуда происходит удаление), и реализуйте сценарий, который не напрямую обращается 
к операциям Selenium, а оперирует вышеперечисленными объектами-страницами.

----------------------------------------------------

